// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pingpong.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	pingpong.proto

It has these top-level messages:
	Ping
	Pong
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ping struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ping) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Pong struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pong) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Ping)(nil), "main.Ping")
	proto.RegisterType((*Pong)(nil), "main.Pong")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PingPong service

type PingPongClient interface {
	PingPong(ctx context.Context, opts ...grpc.CallOption) (PingPong_PingPongClient, error)
}

type pingPongClient struct {
	cc *grpc.ClientConn
}

func NewPingPongClient(cc *grpc.ClientConn) PingPongClient {
	return &pingPongClient{cc}
}

func (c *pingPongClient) PingPong(ctx context.Context, opts ...grpc.CallOption) (PingPong_PingPongClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PingPong_serviceDesc.Streams[0], c.cc, "/main.PingPong/PingPong", opts...)
	if err != nil {
		return nil, err
	}
	x := &pingPongPingPongClient{stream}
	return x, nil
}

type PingPong_PingPongClient interface {
	Send(*Ping) error
	Recv() (*Pong, error)
	grpc.ClientStream
}

type pingPongPingPongClient struct {
	grpc.ClientStream
}

func (x *pingPongPingPongClient) Send(m *Ping) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pingPongPingPongClient) Recv() (*Pong, error) {
	m := new(Pong)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PingPong service

type PingPongServer interface {
	PingPong(PingPong_PingPongServer) error
}

func RegisterPingPongServer(s *grpc.Server, srv PingPongServer) {
	s.RegisterService(&_PingPong_serviceDesc, srv)
}

func _PingPong_PingPong_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PingPongServer).PingPong(&pingPongPingPongServer{stream})
}

type PingPong_PingPongServer interface {
	Send(*Pong) error
	Recv() (*Ping, error)
	grpc.ServerStream
}

type pingPongPingPongServer struct {
	grpc.ServerStream
}

func (x *pingPongPingPongServer) Send(m *Pong) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pingPongPingPongServer) Recv() (*Ping, error) {
	m := new(Ping)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PingPong_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.PingPong",
	HandlerType: (*PingPongServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PingPong",
			Handler:       _PingPong_PingPong_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pingpong.proto",
}

func init() { proto.RegisterFile("pingpong.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0x3f, 0x6b, 0xc3, 0x30,
	0x10, 0x47, 0x2b, 0x30, 0xfd, 0xa3, 0xa1, 0x83, 0x27, 0xd3, 0xc9, 0x78, 0xf2, 0x62, 0xa9, 0xb4,
	0xfd, 0x04, 0x1d, 0x4b, 0x87, 0xd2, 0x31, 0x4b, 0x90, 0x85, 0xb8, 0x1c, 0xf1, 0xdd, 0x09, 0x49,
	0x86, 0xf8, 0xdb, 0x07, 0x1b, 0x0c, 0x99, 0xb2, 0xbd, 0x07, 0x8f, 0x3b, 0x7e, 0xfa, 0x35, 0x22,
	0x43, 0x14, 0x06, 0x13, 0x93, 0x14, 0xa9, 0x2b, 0x72, 0xc8, 0x5d, 0xab, 0xab, 0x3f, 0x64, 0xa8,
	0x1b, 0xfd, 0x44, 0x21, 0x67, 0x07, 0xa1, 0x51, 0xad, 0xea, 0x5f, 0xfe, 0x77, 0xdd, 0x0a, 0xb9,
	0x57, 0x7c, 0x7c, 0xe9, 0xe7, 0xf5, 0xc6, 0x56, 0xf5, 0x37, 0xac, 0xcd, 0xfa, 0xc2, 0xac, 0xfe,
	0xb6, 0xb3, 0x30, 0x74, 0x0f, 0xbd, 0x7a, 0x57, 0xdf, 0xbf, 0x87, 0x1f, 0xc0, 0x72, 0x9a, 0x47,
	0xe3, 0x85, 0x6c, 0x9c, 0x5c, 0x41, 0x9e, 0x89, 0x84, 0xcf, 0x61, 0xb1, 0x20, 0x83, 0x17, 0xf6,
	0x73, 0x4a, 0x81, 0xfd, 0x32, 0x4c, 0x48, 0x58, 0xb2, 0x0d, 0x17, 0x47, 0x71, 0x0a, 0xd9, 0x42,
	0x8a, 0xfe, 0x98, 0x4b, 0x0a, 0x8e, 0x90, 0xc1, 0xc6, 0x71, 0x7c, 0xdc, 0x46, 0x7d, 0x5e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x16, 0xc5, 0xb0, 0x39, 0xe6, 0x00, 0x00, 0x00,
}
